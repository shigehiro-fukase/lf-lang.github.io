{"componentChunkName":"component---src-templates-documentation-tsx","path":"/docs/handbook/reactors-on-patmos","result":{"data":{"markdownRemark":{"id":"1b9eb6de-b3ca-54c1-bc79-972ea7a0fd22","excerpt":"Reactors on Patmos Reactors can be executed on Patmos, a bare-metal execution platform\nthat is optimized for time-predictable execution. Well written C programs…","html":"<h2 id=\"reactors-on-patmos\" style=\"position:relative;\"><a href=\"#reactors-on-patmos\" aria-label=\"reactors on patmos permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reactors on Patmos</h2>\n<p>Reactors can be executed on <a href=\"https://github.com/t-crest/patmos\">Patmos</a>, a bare-metal execution platform\nthat is optimized for time-predictable execution. Well written C programs can be analyzed for their\nworst-case execution time (WCET).</p>\n<h3 id=\"compiling-and-running-reactors\" style=\"position:relative;\"><a href=\"#compiling-and-running-reactors\" aria-label=\"compiling and running reactors permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Compiling and Running Reactors</h3>\n<p>Patmos can run in an FPGA, but there are also two\nsimulators available:</p>\n<ol>\n<li><code>pasim</code> a software ISA simulator that is written in C++.</li>\n<li><code>patemu</code> a cycle-accurate hardware emulator generated from the hardware description.</li>\n</ol>\n<p>To execute reactions on Patmos, the <a href=\"https://github.com/t-crest/patmos\">Patmos toolchain</a> needs\nto be installed. The web page contains a quick start, detailed information including how to\nperform WCET analysis is available in the\n<a href=\"http://patmos.compute.dtu.dk/patmos_handbook.pdf\">Patmos Reference Handbook</a>.</p>\n<p>To execute the “hello world” reactor on Patmos use the LF compiler to generate the C code.\nCompile the reactor with the Patmos compiler (in <code>src-gen</code>):</p>\n<pre class=\"source-lf language-text\">patmos-clang Minimal.c -o Minimal.elf</pre>\n<p>The reactor can be executed on the SW simulator with:</p>\n<pre class=\"source-lf language-text\">pasim Minimal.elf</pre>\n<p>As Patmos is a bare metal runtime that has no notion of calendar time, its start time\nis considered the epoch and the following output will be observed:</p>\n<pre class=\"source-lf language-text\">Start execution at time Thu Jan  1 00:00:00 1970\nplus 640000 nanoseconds.\nHello World.\nElapsed logical time (in nsec): 0\nElapsed physical time (in nsec): 3970000</pre>\n<p>The reactor can also be executed on the hardware emulator of Patmos:</p>\n<pre class=\"source-lf language-text\">patemu Minimal.elf</pre>\n<p>This execution is considerably slower than the SW simulator, as the concrete hardware\nof Patmos is simulated cycle-accurate.</p>\n<h3 id=\"worst-case-execution-time-analysis\" style=\"position:relative;\"><a href=\"#worst-case-execution-time-analysis\" aria-label=\"worst case execution time analysis permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Worst-Case Execution Time Analysis</h3>\n<p>Following example is a code fragment from\n<a href=\"https://github.com/lf-lang/lingua-franca/blob/master/xtext/org.icyphy.linguafranca/src/test/C/src/Wcet.lf\">Wcet.lf</a>.</p>\n<pre class=\"source-lf language-lf-c\"><span class=\"source-lf storage-modifier-lflang\">reactor</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">Work</span><span class=\"source-lf\"> {</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">input</span><span class=\"source-lf\"> in1:</span><span class=\"source-lf\"> </span><span class=\"source-lf storage-type-primitive-cpp storage-type-built-in-primitive-cpp\">int</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">input</span><span class=\"source-lf\"> in2:</span><span class=\"source-lf\"> </span><span class=\"source-lf storage-type-primitive-cpp storage-type-built-in-primitive-cpp\">int</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">output</span><span class=\"source-lf\"> out:</span><span class=\"source-lf storage-type-primitive-cpp storage-type-built-in-primitive-cpp\">int</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf keyword-control-lflang\">reaction</span><span class=\"source-lf\">(in1, in2) </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> out </span><span class=\"source-lf meta-embedded-block-c\">{=</span>\n<span class=\"source-lf meta-embedded-block-c\">    \t</span><span class=\"source-lf meta-embedded-block-c storage-type-primitive-cpp storage-type-built-in-primitive-cpp\">int</span><span class=\"source-lf meta-embedded-block-c\"> ret</span><span class=\"source-lf meta-embedded-block-c punctuation-terminator-statement-cpp\">;</span>\n<span class=\"source-lf meta-embedded-block-c\">    \t</span><span class=\"source-lf meta-embedded-block-c keyword-control-if-cpp\">if</span><span class=\"source-lf meta-embedded-block-c\"> </span><span class=\"source-lf meta-embedded-block-c meta-parens-cpp punctuation-section-parens-begin-bracket-round-cpp\">(</span><span class=\"source-lf meta-embedded-block-c meta-parens-cpp\">in1 </span><span class=\"source-lf meta-embedded-block-c meta-parens-cpp keyword-operator-comparison-cpp\">&gt;</span><span class=\"source-lf meta-embedded-block-c meta-parens-cpp\"> </span><span class=\"source-lf meta-embedded-block-c meta-parens-cpp constant-numeric-decimal-cpp\">10</span><span class=\"source-lf meta-embedded-block-c meta-parens-cpp punctuation-section-parens-end-bracket-round-cpp\">)</span><span class=\"source-lf meta-embedded-block-c\"> </span><span class=\"source-lf meta-embedded-block-c meta-block-cpp punctuation-section-block-begin-bracket-curly-cpp\">{</span>\n<span class=\"source-lf meta-embedded-block-c meta-block-cpp\">    \t\tret </span><span class=\"source-lf meta-embedded-block-c meta-block-cpp keyword-operator-assignment-cpp\">=</span><span class=\"source-lf meta-embedded-block-c meta-block-cpp\"> in2 </span><span class=\"source-lf meta-embedded-block-c meta-block-cpp keyword-operator-cpp\">*</span><span class=\"source-lf meta-embedded-block-c meta-block-cpp\"> in1</span><span class=\"source-lf meta-embedded-block-c meta-block-cpp punctuation-terminator-statement-cpp\">;</span>\n<span class=\"source-lf meta-embedded-block-c meta-block-cpp\">    \t</span><span class=\"source-lf meta-embedded-block-c meta-block-cpp punctuation-section-block-end-bracket-curly-cpp\">}</span><span class=\"source-lf meta-embedded-block-c\"> </span><span class=\"source-lf meta-embedded-block-c keyword-control-else-cpp\">else</span><span class=\"source-lf meta-embedded-block-c\"> </span><span class=\"source-lf meta-embedded-block-c meta-block-cpp punctuation-section-block-begin-bracket-curly-cpp\">{</span>\n<span class=\"source-lf meta-embedded-block-c meta-block-cpp\">    \t\tret </span><span class=\"source-lf meta-embedded-block-c meta-block-cpp keyword-operator-assignment-cpp\">=</span><span class=\"source-lf meta-embedded-block-c meta-block-cpp\"> in2 </span><span class=\"source-lf meta-embedded-block-c meta-block-cpp keyword-operator-cpp\">+</span><span class=\"source-lf meta-embedded-block-c meta-block-cpp\"> in1</span><span class=\"source-lf meta-embedded-block-c meta-block-cpp punctuation-terminator-statement-cpp\">;</span>\n<span class=\"source-lf meta-embedded-block-c meta-block-cpp\">    \t</span><span class=\"source-lf meta-embedded-block-c meta-block-cpp punctuation-section-block-end-bracket-curly-cpp\">}</span>\n<span class=\"source-lf meta-embedded-block-c\">        </span><span class=\"source-lf meta-embedded-block-c entity-name-function-call-cpp\">lf_set</span><span class=\"source-lf meta-embedded-block-c punctuation-section-arguments-begin-bracket-round-function-call-cpp\">(</span><span class=\"source-lf meta-embedded-block-c\">out</span><span class=\"source-lf meta-embedded-block-c punctuation-separator-delimiter-comma-cpp\">,</span><span class=\"source-lf meta-embedded-block-c\"> ret</span><span class=\"source-lf meta-embedded-block-c punctuation-section-arguments-end-bracket-round-function-call-cpp\">)</span><span class=\"source-lf meta-embedded-block-c punctuation-terminator-statement-cpp\">;</span>\n<span class=\"source-lf meta-embedded-block-c\">    </span><span class=\"source-lf meta-embedded-block-c\">=}</span>\n<span class=\"source-lf\">}</span>\n</pre>\n<p>We want to perform WCET analysis of the single reaction of the Work reactor.\nThis reaction, depending on the input data, will either perform a multiplication,\nwhich is more expensive in Patmos, or an addition. The WCET analysis shall consider\nthe multiplication path as the worst-case path. To generate the information for\nWCET analysis by the compiler we have to compile the application as follows:</p>\n<pre class=\"source-lf language-text\">patmos-clang -O2 -mserialize=wcet.pml Wcet.c</pre>\n<p>We investigate the C source code <code>Wcet.c</code> and find that the reaction we\nare interested is named <code>reaction_function1</code>. Therefore, we invoke WCET analysis\nas follows:</p>\n<pre class=\"source-lf language-text\">platin wcet -i wcet.pml -b a.out -e reaction_function1 --report</pre>\n<p>This results in following report:</p>\n<pre class=\"source-lf language-text\">...\n[platin] INFO: Finished run WCET analysis (platin)          in 62 ms\n[platin] INFO: best WCET bound: 242 cycles\n---\n- analysis-entry: reaction_function1\n  source: platin\n  cycles: 242\n...</pre>\n<p>The analysis gives the WCET of 242 clock cycles for the reaction,\nwhich includes clock cycles for data cache misses.\nFurther details on the WCET analysis\ntool <code>platin</code> and e.g., how to annotate loop bounds can be found in the\n<a href=\"http://patmos.compute.dtu.dk/patmos_handbook.pdf\">Patmos Reference Handbook</a>.</p>\n<p>Note, that the WCET analysis of a reaction does only include the code of the\nreaction function, not the cache miss cost of calling the function from\nthe scheduler or the cache miss cost when returning to the scheduler.</p>","headings":[{"value":"Reactors on Patmos","depth":2},{"value":"Compiling and Running Reactors","depth":3},{"value":"Worst-Case Execution Time Analysis","depth":3}],"frontmatter":{"permalink":"/docs/handbook/reactors-on-patmos","title":"Reactors on Patmos","oneline":"Reactors on Patmos (preliminary)","preamble":""}},"prev":{"childMarkdownRemark":{"frontmatter":{"title":"Contributing","oneline":"Contribute to Lingua Franca.","permalink":"/docs/handbook/contributing"}}},"next":{"childMarkdownRemark":{"frontmatter":{"title":"Contributing","oneline":"Contribute to Lingua Franca.","permalink":"/docs/handbook/contributing"}}}},"pageContext":{"slug":"/docs/handbook/reactors-on-patmos","repoPath":"/packages/documentation/copy/en/preliminary/Reactors on Patmos.md","lang":"en","modifiedTime":"2023-07-05T20:04:12.740Z"}},"staticQueryHashes":[]}