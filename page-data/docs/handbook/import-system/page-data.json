{"componentChunkName":"component---src-templates-documentation-tsx","path":"/docs/handbook/import-system","result":{"data":{"markdownRemark":{"id":"4f193470-c244-5392-8875-25389d7cd383","excerpt":"The following topics are meant as collections of design ideas, with the purpose of refining them into concrete design proposals. Current Implementation of…","html":"<p><em>The following topics are meant as collections of design ideas, with the purpose of refining them into concrete design proposals.</em></p>\n<h1 id=\"current-implementation-of-imports\" style=\"position:relative;\"><a href=\"#current-implementation-of-imports\" aria-label=\"current implementation of imports permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Current Implementation of Imports</h1>\n<p>The import functionality in Lingua Franca is limited to:</p>\n<pre class=\"source-lf language-text\">import HelloWorld.lf</pre>\n<p>This can be useful if the <code>.lf</code> file is located in the same directory as the file containing the main reactor.</p>\n<p>However, several shortcomings exist in this current system which we shall discuss next.</p>\n<h2 id=\"duplicate-reactor-names\" style=\"position:relative;\"><a href=\"#duplicate-reactor-names\" aria-label=\"duplicate reactor names permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Duplicate Reactor Names</h2>\n<p>Reactors with the same name can cause issues. For example:</p>\n<pre class=\"source-lf language-text\">import CatsAndPuppies.lf // Contains a Puppy reactor\nimport MeanPuppies.lf   // Contains another Puppy reactor</pre>\n<p>There is no way for the LF program to distinguish between the two <code>Puppy</code> reactors.</p>\n<p><strong>Note.</strong> With a relatively trivial extension to the current LF import mechanism, it is possible to detect duplicates, but there is no way to circumvent them in the current LF program (i.e., the original names might have to be changed).</p>\n<h2 id=\"selective-importing\" style=\"position:relative;\"><a href=\"#selective-importing\" aria-label=\"selective importing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Selective Importing</h2>\n<p>Selective importing is not possible. For example, using</p>\n<pre class=\"source-lf language-text\">import CatsAndPuppies.lf</pre>\n<p>will import all the reactors contained in the <code>.lf</code> file. It would be desirable to selectively import a subset of reactors in another <code>.lf</code> file.</p>\n<h2 id=\"qualified-paths\" style=\"position:relative;\"><a href=\"#qualified-paths\" aria-label=\"qualified paths permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Qualified Paths</h2>\n<p>Currently, there is no elegant way of importing modules that are not in the same directory.</p>\n<h2 id=\"renaming\" style=\"position:relative;\"><a href=\"#renaming\" aria-label=\"renaming permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Renaming</h2>\n<p>All the reactors imported will have the name originally given to them by the original programmer. It might make sense to rename them for the current LF program.</p>\n<h2 id=\"packages\" style=\"position:relative;\"><a href=\"#packages\" aria-label=\"packages permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Packages</h2>\n<p>With the current import solution that only uses files, implementing packages in Lingua Franca is not feasible.</p>\n<h1 id=\"proposed-solution\" style=\"position:relative;\"><a href=\"#proposed-solution\" aria-label=\"proposed solution permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proposed Solution</h1>\n<p>With inspirations from Python, we propose the following import mechanism:</p>\n<pre class=\"source-lf language-text\">&quot;import&quot; LF_Trunc_File/module (&quot;,&quot; LF_Trunc_File/module)* \n              | &quot;from&quot; LFTruncFile/module &quot;import&quot; reactor [&quot;as&quot; name]\n                (&quot;,&quot; reactor [&quot;as&quot; name] )*\n              | &quot;from&quot; LF_Trunc_File/module &quot;import&quot; &quot;*&quot; </pre>\n<p>Before discussing some examples, let’s discuss <code>LF_Trunc_File/module</code>. First and foremost, <code>LF_Truc_File</code> stands for Lingua Franca Truncated File, which is a <code>name.lf</code> file with the <code>.lf</code> removed. Therefore, the legacy support for import can be carried over as:</p>\n<pre class=\"source-lf language-text\">import HelloWorld</pre>\n<p>Second, the <code>module</code> would introduce the notion of packages to Lingua Franca. The content of a module can be located in any path. To enable this facility, modules provide a Lingua Franca Meta file (LFM) that introduces the package name, and the absolute or relative paths of all the LF files that are included in that package. For example:</p>\n<pre class=\"source-lf language-text\">// CatsAndPuppies.LFM\npackage CatsAndPuppies // Optional. The file name would be interpreted as the package name.\nimport /home/user/linguafranca/pets/Cats.lf // Absolute paths\nimport pets/Puppies.lf // Relative paths</pre>\n<p>For a package to be accessible, the <code>LFM</code> file needs to be discoverable. For example, it can be automatically added to the current directory or “installed” in a known Lingua Franca path (e.g., <code>/usr/local/LF/packages</code> or <code>/home/user/linguafranca/packages</code>).</p>\n<p>With that in mind, let’s discuss some examples on how this might work next.\nThe content of the <code>HelloWorld.lf</code> example is as follows:</p>\n<pre class=\"source-lf language-text\">target C; \nreactor SayHello {\n    timer t;\n    reaction(t) {=\n        printf(&quot;Hello World.\\n&quot;);\n    =}\n}\nmain reactor HelloWorldTest {\n    a = new HelloWorld();\n}</pre>\n<p>Let us create a <code>Greetings.lf</code> program based on HelloWorld.</p>\n<pre class=\"source-lf language-text\">target C; \nimport HelloWorld\n\nmain reactor Greetings {\n    a = new SayHello();\n}</pre>\n<p>To generate code for <code>Greetings.lf</code>, Lingua Franca first searches for a <code>HelloWorld.lf</code> file in the same directory as <code>Greetings.lf</code>. If not found, it will look for a <code>HelloWorld.LFM</code> in the known paths. If none is found, an error is raised.</p>\n<p>Now we can demonstrate selective import. For example:</p>\n<pre class=\"source-lf language-text\">target C; \nfrom HelloWorld import SayHello\n\nmain reactor Greetings {\n    a = new SayHello();\n}</pre>\n<p>Finally, renaming can be done by using the <code>as</code> predicate:</p>\n<pre class=\"source-lf language-text\">target C; \nfrom HelloWorld import SayHello as SayGreetings\n\nmain reactor Greetings {\n    a = new SayHeGreetings();\n}</pre>","headings":[{"value":"Current Implementation of Imports","depth":1},{"value":"Duplicate Reactor Names","depth":2},{"value":"Selective Importing","depth":2},{"value":"Qualified Paths","depth":2},{"value":"Renaming","depth":2},{"value":"Packages","depth":2},{"value":"Proposed Solution","depth":1}],"frontmatter":{"permalink":"/docs/handbook/import-system","title":"Import System","oneline":"Import System (preliminary)","preamble":""}},"prev":{"childMarkdownRemark":{"frontmatter":{"title":"Contributing","oneline":"Contribute to Lingua Franca.","permalink":"/docs/handbook/contributing"}}},"next":{"childMarkdownRemark":{"frontmatter":{"title":"Contributing","oneline":"Contribute to Lingua Franca.","permalink":"/docs/handbook/contributing"}}}},"pageContext":{"slug":"/docs/handbook/import-system","repoPath":"/packages/documentation/copy/en/preliminary/Import System.md","lang":"en","modifiedTime":"2023-09-03T08:07:27.330Z"}},"staticQueryHashes":[]}