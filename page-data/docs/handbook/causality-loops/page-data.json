{"componentChunkName":"component---src-templates-documentation-tsx","path":"/docs/handbook/causality-loops","result":{"data":{"markdownRemark":{"id":"2ca49a4a-51a0-5d4e-b91d-fc76ff59751a","excerpt":"Cycles The interconnection pattern for a collection of reactors can form a cycle, but some care is required. Consider the following example: $start(Cycle)$ $endâ€¦","html":"<h2 id=\"cycles\" style=\"position:relative;\"><a href=\"#cycles\" aria-label=\"cycles permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cycles</h2>\n<p>The interconnection pattern for a collection of reactors can form a cycle, but some care is required. Consider the following example:</p>\n<p>$start(Cycle)$</p>\n<pre class=\"source-lf language-lf-c\"><span class=\"source-lf meta-targetspec-lflang keyword-control-lflang\">target</span><span class=\"source-lf meta-targetspec-lflang\"> </span><span class=\"source-lf meta-targetspec-lflang constant-language-lflang\">C</span><span class=\"source-lf meta-targetspec-lflang\">;</span>\n<span class=\"source-lf storage-modifier-lflang\">reactor</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">A</span><span class=\"source-lf\"> {</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">input</span><span class=\"source-lf\"> x:</span><span class=\"source-lf storage-type-primitive-cpp storage-type-built-in-primitive-cpp\">int</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">output</span><span class=\"source-lf\"> y:</span><span class=\"source-lf storage-type-primitive-cpp storage-type-built-in-primitive-cpp\">int</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf keyword-control-lflang\">reaction</span><span class=\"source-lf\">(x) </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> y </span><span class=\"source-lf meta-embedded-block-c\">{=</span>\n<span class=\"source-lf meta-embedded-block-c comment-line-double-slash-cpp\">        </span><span class=\"source-lf meta-embedded-block-c comment-line-double-slash-cpp punctuation-definition-comment-cpp\">//</span><span class=\"source-lf meta-embedded-block-c comment-line-double-slash-cpp\"> ... something here ...</span>\n<span class=\"source-lf meta-embedded-block-c\">    </span><span class=\"source-lf meta-embedded-block-c\">=}</span>\n<span class=\"source-lf\">}</span>\n<span class=\"source-lf storage-modifier-lflang\">reactor</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">B</span><span class=\"source-lf\"> {</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">input</span><span class=\"source-lf\"> x:</span><span class=\"source-lf storage-type-primitive-cpp storage-type-built-in-primitive-cpp\">int</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">output</span><span class=\"source-lf\"> y:</span><span class=\"source-lf storage-type-primitive-cpp storage-type-built-in-primitive-cpp\">int</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf keyword-control-lflang\">reaction</span><span class=\"source-lf\">(x) </span><span class=\"source-lf meta-embedded-block-c\">{=</span>\n<span class=\"source-lf meta-embedded-block-c comment-line-double-slash-cpp\">        </span><span class=\"source-lf meta-embedded-block-c comment-line-double-slash-cpp punctuation-definition-comment-cpp\">//</span><span class=\"source-lf meta-embedded-block-c comment-line-double-slash-cpp\"> ... something here ...</span>\n<span class=\"source-lf meta-embedded-block-c\">    </span><span class=\"source-lf meta-embedded-block-c\">=}</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf keyword-control-lflang\">reaction</span><span class=\"source-lf\">(</span><span class=\"source-lf support-variable-lflang\">startup</span><span class=\"source-lf\">) </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> y </span><span class=\"source-lf meta-embedded-block-c\">{=</span>\n<span class=\"source-lf meta-embedded-block-c comment-line-double-slash-cpp\">        </span><span class=\"source-lf meta-embedded-block-c comment-line-double-slash-cpp punctuation-definition-comment-cpp\">//</span><span class=\"source-lf meta-embedded-block-c comment-line-double-slash-cpp\"> ... something here ...</span>\n<span class=\"source-lf meta-embedded-block-c\">    </span><span class=\"source-lf meta-embedded-block-c\">=}</span>\n<span class=\"source-lf\">}</span>\n<span class=\"source-lf storage-modifier-lflang\">main</span><span class=\"source-lf\"> </span><span class=\"source-lf storage-modifier-lflang\">reactor</span><span class=\"source-lf\"> {</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">a</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">=</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-new-lflang\">new</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">A</span><span class=\"source-lf\">();</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">b</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">=</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-new-lflang\">new</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">B</span><span class=\"source-lf\">();</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">a</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">y</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">b</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">x</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">b</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">y</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">a</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">x</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">}</span>\n</pre>\n<pre class=\"source-lf language-lf-cpp\"><span class=\"source-lf meta-targetspec-lflang keyword-control-lflang\">target</span><span class=\"source-lf meta-targetspec-lflang\"> </span><span class=\"source-lf meta-targetspec-lflang constant-language-lflang\">Cpp</span><span class=\"source-lf meta-targetspec-lflang\">;</span>\n<span class=\"source-lf storage-modifier-lflang\">reactor</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">A</span><span class=\"source-lf\"> {</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">input</span><span class=\"source-lf\"> x:</span><span class=\"source-lf storage-type-primitive-cpp storage-type-built-in-primitive-cpp\">int</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">output</span><span class=\"source-lf\"> y:</span><span class=\"source-lf storage-type-primitive-cpp storage-type-built-in-primitive-cpp\">int</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf keyword-control-lflang\">reaction</span><span class=\"source-lf\">(x) </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> y </span><span class=\"source-lf meta-embedded-block-cpp\">{=</span>\n<span class=\"source-lf meta-embedded-block-cpp comment-line-double-slash-cpp\">        </span><span class=\"source-lf meta-embedded-block-cpp comment-line-double-slash-cpp punctuation-definition-comment-cpp\">//</span><span class=\"source-lf meta-embedded-block-cpp comment-line-double-slash-cpp\"> ... something here ...</span>\n<span class=\"source-lf meta-embedded-block-cpp\">    </span><span class=\"source-lf meta-embedded-block-cpp\">=}</span>\n<span class=\"source-lf\">}</span>\n<span class=\"source-lf storage-modifier-lflang\">reactor</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">B</span><span class=\"source-lf\"> {</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">input</span><span class=\"source-lf\"> x:</span><span class=\"source-lf storage-type-primitive-cpp storage-type-built-in-primitive-cpp\">int</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">output</span><span class=\"source-lf\"> y:</span><span class=\"source-lf storage-type-primitive-cpp storage-type-built-in-primitive-cpp\">int</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf keyword-control-lflang\">reaction</span><span class=\"source-lf\">(x) </span><span class=\"source-lf meta-embedded-block-cpp\">{=</span>\n<span class=\"source-lf meta-embedded-block-cpp comment-line-double-slash-cpp\">        </span><span class=\"source-lf meta-embedded-block-cpp comment-line-double-slash-cpp punctuation-definition-comment-cpp\">//</span><span class=\"source-lf meta-embedded-block-cpp comment-line-double-slash-cpp\"> ... something here ...</span>\n<span class=\"source-lf meta-embedded-block-cpp\">    </span><span class=\"source-lf meta-embedded-block-cpp\">=}</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf keyword-control-lflang\">reaction</span><span class=\"source-lf\">(</span><span class=\"source-lf support-variable-lflang\">startup</span><span class=\"source-lf\">) </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> y </span><span class=\"source-lf meta-embedded-block-cpp\">{=</span>\n<span class=\"source-lf meta-embedded-block-cpp comment-line-double-slash-cpp\">        </span><span class=\"source-lf meta-embedded-block-cpp comment-line-double-slash-cpp punctuation-definition-comment-cpp\">//</span><span class=\"source-lf meta-embedded-block-cpp comment-line-double-slash-cpp\"> ... something here ...</span>\n<span class=\"source-lf meta-embedded-block-cpp\">    </span><span class=\"source-lf meta-embedded-block-cpp\">=}</span>\n<span class=\"source-lf\">}</span>\n<span class=\"source-lf storage-modifier-lflang\">main</span><span class=\"source-lf\"> </span><span class=\"source-lf storage-modifier-lflang\">reactor</span><span class=\"source-lf\"> {</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">a</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">=</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-new-lflang\">new</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">A</span><span class=\"source-lf\">();</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">b</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">=</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-new-lflang\">new</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">B</span><span class=\"source-lf\">();</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">a</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">y</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">b</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">x</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">b</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">y</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">a</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">x</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">}</span>\n<span class=\"source-lf\"></span>\n</pre>\n<pre class=\"source-lf language-lf-py\"><span class=\"source-lf meta-targetspec-lflang keyword-control-lflang\">target</span><span class=\"source-lf meta-targetspec-lflang\"> </span><span class=\"source-lf meta-targetspec-lflang constant-language-lflang\">Python</span><span class=\"source-lf meta-targetspec-lflang\">;</span>\n<span class=\"source-lf storage-modifier-lflang\">reactor</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">A</span><span class=\"source-lf\"> {</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">input</span><span class=\"source-lf\"> x;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">output</span><span class=\"source-lf\"> y;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf keyword-control-lflang\">reaction</span><span class=\"source-lf\">(x) </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> y </span><span class=\"source-lf meta-embedded-block-py\">{=</span>\n<span class=\"source-lf meta-embedded-block-py\">        </span><span class=\"source-lf meta-embedded-block-py comment-line-number-sign-python punctuation-definition-comment-python\">#</span><span class=\"source-lf meta-embedded-block-py comment-line-number-sign-python\"> ... something here ...</span>\n<span class=\"source-lf meta-embedded-block-py\">    </span><span class=\"source-lf meta-embedded-block-py\">=}</span>\n<span class=\"source-lf\">}</span>\n<span class=\"source-lf storage-modifier-lflang\">reactor</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">B</span><span class=\"source-lf\"> {</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">input</span><span class=\"source-lf\"> x;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">output</span><span class=\"source-lf\"> y;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf keyword-control-lflang\">reaction</span><span class=\"source-lf\">(x) </span><span class=\"source-lf meta-embedded-block-py\">{=</span>\n<span class=\"source-lf meta-embedded-block-py\">        </span><span class=\"source-lf meta-embedded-block-py comment-line-number-sign-python punctuation-definition-comment-python\">#</span><span class=\"source-lf meta-embedded-block-py comment-line-number-sign-python\"> ... something here ...</span>\n<span class=\"source-lf meta-embedded-block-py\">    </span><span class=\"source-lf meta-embedded-block-py\">=}</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf keyword-control-lflang\">reaction</span><span class=\"source-lf\">(</span><span class=\"source-lf support-variable-lflang\">startup</span><span class=\"source-lf\">) </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> y </span><span class=\"source-lf meta-embedded-block-py\">{=</span>\n<span class=\"source-lf meta-embedded-block-py\">        </span><span class=\"source-lf meta-embedded-block-py comment-line-number-sign-python punctuation-definition-comment-python\">#</span><span class=\"source-lf meta-embedded-block-py comment-line-number-sign-python\"> ... something here ...</span>\n<span class=\"source-lf meta-embedded-block-py\">    </span><span class=\"source-lf meta-embedded-block-py\">=}</span>\n<span class=\"source-lf\">}</span>\n<span class=\"source-lf storage-modifier-lflang\">main</span><span class=\"source-lf\"> </span><span class=\"source-lf storage-modifier-lflang\">reactor</span><span class=\"source-lf\"> {</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">a</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">=</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-new-lflang\">new</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">A</span><span class=\"source-lf\">();</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">b</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">=</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-new-lflang\">new</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">B</span><span class=\"source-lf\">();</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">a</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">y</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">b</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">x</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">b</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">y</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">a</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">x</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">}</span>\n</pre>\n<pre class=\"source-lf language-lf-ts\"><span class=\"source-lf meta-targetspec-lflang keyword-control-lflang\">target</span><span class=\"source-lf meta-targetspec-lflang\"> </span><span class=\"source-lf meta-targetspec-lflang constant-language-lflang\">TypeScript</span>\n<span class=\"source-lf storage-modifier-lflang\">reactor</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">A</span><span class=\"source-lf\"> {</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">input</span><span class=\"source-lf\"> x:</span><span class=\"source-lf storage-type-lflang\">number</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">output</span><span class=\"source-lf\"> y:</span><span class=\"source-lf storage-type-lflang\">number</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf keyword-control-lflang\">reaction</span><span class=\"source-lf\">(x) </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> y </span><span class=\"source-lf meta-embedded-block-ts\">{=</span>\n<span class=\"source-lf meta-embedded-block-ts punctuation-whitespace-comment-leading-ts\">        </span><span class=\"source-lf meta-embedded-block-ts comment-line-double-slash-ts punctuation-definition-comment-ts\">//</span><span class=\"source-lf meta-embedded-block-ts comment-line-double-slash-ts\"> ... something here ...</span>\n<span class=\"source-lf meta-embedded-block-ts\">    </span><span class=\"source-lf meta-embedded-block-ts\">=}</span>\n<span class=\"source-lf\">}</span>\n<span class=\"source-lf storage-modifier-lflang\">reactor</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">B</span><span class=\"source-lf\"> {</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">input</span><span class=\"source-lf\"> x:</span><span class=\"source-lf storage-type-lflang\">number</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">output</span><span class=\"source-lf\"> y:</span><span class=\"source-lf storage-type-lflang\">number</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf keyword-control-lflang\">reaction</span><span class=\"source-lf\">(x) </span><span class=\"source-lf meta-embedded-block-ts\">{=</span>\n<span class=\"source-lf meta-embedded-block-ts punctuation-whitespace-comment-leading-ts\">        </span><span class=\"source-lf meta-embedded-block-ts comment-line-double-slash-ts punctuation-definition-comment-ts\">//</span><span class=\"source-lf meta-embedded-block-ts comment-line-double-slash-ts\"> ... something here ...</span>\n<span class=\"source-lf meta-embedded-block-ts\">    </span><span class=\"source-lf meta-embedded-block-ts\">=}</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf keyword-control-lflang\">reaction</span><span class=\"source-lf\">(</span><span class=\"source-lf support-variable-lflang\">startup</span><span class=\"source-lf\">) </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> y </span><span class=\"source-lf meta-embedded-block-ts\">{=</span>\n<span class=\"source-lf meta-embedded-block-ts punctuation-whitespace-comment-leading-ts\">        </span><span class=\"source-lf meta-embedded-block-ts comment-line-double-slash-ts punctuation-definition-comment-ts\">//</span><span class=\"source-lf meta-embedded-block-ts comment-line-double-slash-ts\"> ... something here ...</span>\n<span class=\"source-lf meta-embedded-block-ts\">    </span><span class=\"source-lf meta-embedded-block-ts\">=}</span>\n<span class=\"source-lf\">}</span>\n<span class=\"source-lf storage-modifier-lflang\">main</span><span class=\"source-lf\"> </span><span class=\"source-lf storage-modifier-lflang\">reactor</span><span class=\"source-lf\"> {</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">a</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">=</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-new-lflang\">new</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">A</span><span class=\"source-lf\">()</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">b</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">=</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-new-lflang\">new</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">B</span><span class=\"source-lf\">()</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">a</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">y</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">b</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">x</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">b</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">y</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">a</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">x</span>\n<span class=\"source-lf\">}</span>\n<span class=\"source-lf\"></span>\n</pre>\n<pre class=\"source-lf language-lf-rs\"><span class=\"source-lf meta-targetspec-lflang keyword-control-lflang\">target</span><span class=\"source-lf meta-targetspec-lflang\"> </span><span class=\"source-lf meta-targetspec-lflang constant-language-lflang\">Rust</span><span class=\"source-lf meta-targetspec-lflang\">;</span>\n<span class=\"source-lf storage-modifier-lflang\">reactor</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">A</span><span class=\"source-lf\"> {</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">input</span><span class=\"source-lf\"> x:</span><span class=\"source-lf entity-name-type-lflang\">u32</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">output</span><span class=\"source-lf\"> y:</span><span class=\"source-lf entity-name-type-lflang\">u32</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf keyword-control-lflang\">reaction</span><span class=\"source-lf\">(x) </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> y </span><span class=\"source-lf meta-embedded-block-rs\">{=</span>\n<span class=\"source-lf meta-embedded-block-rs\">        </span><span class=\"source-lf meta-embedded-block-rs comment-line-double-slash-rust\">//</span><span class=\"source-lf meta-embedded-block-rs comment-line-double-slash-rust\"> ... something here ...</span>\n<span class=\"source-lf meta-embedded-block-rs\">    </span><span class=\"source-lf meta-embedded-block-rs\">=}</span>\n<span class=\"source-lf\">}</span>\n<span class=\"source-lf storage-modifier-lflang\">reactor</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">B</span><span class=\"source-lf\"> {</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">input</span><span class=\"source-lf\"> x:</span><span class=\"source-lf entity-name-type-lflang\">u32</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">output</span><span class=\"source-lf\"> y:</span><span class=\"source-lf entity-name-type-lflang\">u32</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf keyword-control-lflang\">reaction</span><span class=\"source-lf\">(x) </span><span class=\"source-lf meta-embedded-block-rs\">{=</span>\n<span class=\"source-lf meta-embedded-block-rs\">        </span><span class=\"source-lf meta-embedded-block-rs comment-line-double-slash-rust\">//</span><span class=\"source-lf meta-embedded-block-rs comment-line-double-slash-rust\"> ... something here ...</span>\n<span class=\"source-lf meta-embedded-block-rs\">    </span><span class=\"source-lf meta-embedded-block-rs\">=}</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf keyword-control-lflang\">reaction</span><span class=\"source-lf\">(</span><span class=\"source-lf support-variable-lflang\">startup</span><span class=\"source-lf\">) </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> y </span><span class=\"source-lf meta-embedded-block-rs\">{=</span>\n<span class=\"source-lf meta-embedded-block-rs\">        </span><span class=\"source-lf meta-embedded-block-rs comment-line-double-slash-rust\">//</span><span class=\"source-lf meta-embedded-block-rs comment-line-double-slash-rust\"> ... something here ...</span>\n<span class=\"source-lf meta-embedded-block-rs\">    </span><span class=\"source-lf meta-embedded-block-rs\">=}</span>\n<span class=\"source-lf\">}</span>\n<span class=\"source-lf storage-modifier-lflang\">main</span><span class=\"source-lf\"> </span><span class=\"source-lf storage-modifier-lflang\">reactor</span><span class=\"source-lf\"> {</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">a</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">=</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-new-lflang\">new</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">A</span><span class=\"source-lf\">();</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">b</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">=</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-new-lflang\">new</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">B</span><span class=\"source-lf\">();</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">a</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">y</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">b</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">x</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">b</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">y</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">a</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">x</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">}</span>\n</pre>\n<p>$end(Cycle)$</p>\n<p>This program yields the following diagram:</p>\n<img alt=\"Lingua Franca diagram\" src=\"/242bf75d337efd591f6c193e836b1c91/Cycle.svg\" width=\"400\">\n<p>The diagram highlights a <strong>causality loop</strong> in the program. At each tag, in reactor <code>B</code>, the first reaction has to execute before the second if it is enabled, a precedence indicated with the red dashed arrow. But the first canâ€™t execute until the reaction of <code>A</code> has executed, and that reaction cannot execute until the second reaction <code>B</code> has executed. There is no way to satisfy these requirements, so the tools refuse to generated code.</p>\n<h2 id=\"cycles-with-delays\" style=\"position:relative;\"><a href=\"#cycles-with-delays\" aria-label=\"cycles with delays permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cycles with Delays</h2>\n<p>One way to break the causality loop and get an executable program is to introduce a <a href=\"/docs/handbook/composing-reactors#connections-with-logical-delays\">logical delay</a> into the loop, as shown below:</p>\n<p>$start(CycleWithDelay)$</p>\n<pre class=\"source-lf language-lf-c\"><span class=\"source-lf meta-targetspec-lflang keyword-control-lflang\">target</span><span class=\"source-lf meta-targetspec-lflang\"> </span><span class=\"source-lf meta-targetspec-lflang constant-language-lflang\">C</span><span class=\"source-lf meta-targetspec-lflang\">;</span>\n<span class=\"source-lf storage-modifier-lflang\">reactor</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">A</span><span class=\"source-lf\"> {</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">input</span><span class=\"source-lf\"> x:</span><span class=\"source-lf storage-type-primitive-cpp storage-type-built-in-primitive-cpp\">int</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">output</span><span class=\"source-lf\"> y:</span><span class=\"source-lf storage-type-primitive-cpp storage-type-built-in-primitive-cpp\">int</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf keyword-control-lflang\">reaction</span><span class=\"source-lf\">(x) </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> y </span><span class=\"source-lf meta-embedded-block-c\">{=</span>\n<span class=\"source-lf meta-embedded-block-c comment-line-double-slash-cpp\">        </span><span class=\"source-lf meta-embedded-block-c comment-line-double-slash-cpp punctuation-definition-comment-cpp\">//</span><span class=\"source-lf meta-embedded-block-c comment-line-double-slash-cpp\"> ... something here ...</span>\n<span class=\"source-lf meta-embedded-block-c\">    </span><span class=\"source-lf meta-embedded-block-c\">=}</span>\n<span class=\"source-lf\">}</span>\n<span class=\"source-lf storage-modifier-lflang\">reactor</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">B</span><span class=\"source-lf\"> {</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">input</span><span class=\"source-lf\"> x:</span><span class=\"source-lf storage-type-primitive-cpp storage-type-built-in-primitive-cpp\">int</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">output</span><span class=\"source-lf\"> y:</span><span class=\"source-lf storage-type-primitive-cpp storage-type-built-in-primitive-cpp\">int</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf keyword-control-lflang\">reaction</span><span class=\"source-lf\">(x) </span><span class=\"source-lf meta-embedded-block-c\">{=</span>\n<span class=\"source-lf meta-embedded-block-c comment-line-double-slash-cpp\">        </span><span class=\"source-lf meta-embedded-block-c comment-line-double-slash-cpp punctuation-definition-comment-cpp\">//</span><span class=\"source-lf meta-embedded-block-c comment-line-double-slash-cpp\"> ... something here ...</span>\n<span class=\"source-lf meta-embedded-block-c\">    </span><span class=\"source-lf meta-embedded-block-c\">=}</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf keyword-control-lflang\">reaction</span><span class=\"source-lf\">(</span><span class=\"source-lf support-variable-lflang\">startup</span><span class=\"source-lf\">) </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> y </span><span class=\"source-lf meta-embedded-block-c\">{=</span>\n<span class=\"source-lf meta-embedded-block-c comment-line-double-slash-cpp\">        </span><span class=\"source-lf meta-embedded-block-c comment-line-double-slash-cpp punctuation-definition-comment-cpp\">//</span><span class=\"source-lf meta-embedded-block-c comment-line-double-slash-cpp\"> ... something here ...</span>\n<span class=\"source-lf meta-embedded-block-c\">    </span><span class=\"source-lf meta-embedded-block-c\">=}</span>\n<span class=\"source-lf\">}</span>\n<span class=\"source-lf storage-modifier-lflang\">main</span><span class=\"source-lf\"> </span><span class=\"source-lf storage-modifier-lflang\">reactor</span><span class=\"source-lf\"> {</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">a</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">=</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-new-lflang\">new</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">A</span><span class=\"source-lf\">();</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">b</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">=</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-new-lflang\">new</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">B</span><span class=\"source-lf\">();</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">a</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">y</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">b</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">x</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-control-lflang\">after</span><span class=\"source-lf\"> </span><span class=\"source-lf constant-numeric-int-lflang\">0</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">b</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">y</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">a</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">x</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">}</span>\n</pre>\n<pre class=\"source-lf language-lf-cpp\"><span class=\"source-lf meta-targetspec-lflang keyword-control-lflang\">target</span><span class=\"source-lf meta-targetspec-lflang\"> </span><span class=\"source-lf meta-targetspec-lflang constant-language-lflang\">Cpp</span><span class=\"source-lf meta-targetspec-lflang\">;</span>\n<span class=\"source-lf storage-modifier-lflang\">reactor</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">A</span><span class=\"source-lf\"> {</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">input</span><span class=\"source-lf\"> x:</span><span class=\"source-lf storage-type-primitive-cpp storage-type-built-in-primitive-cpp\">int</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">output</span><span class=\"source-lf\"> y:</span><span class=\"source-lf storage-type-primitive-cpp storage-type-built-in-primitive-cpp\">int</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf keyword-control-lflang\">reaction</span><span class=\"source-lf\">(x) </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> y </span><span class=\"source-lf meta-embedded-block-cpp\">{=</span>\n<span class=\"source-lf meta-embedded-block-cpp comment-line-double-slash-cpp\">        </span><span class=\"source-lf meta-embedded-block-cpp comment-line-double-slash-cpp punctuation-definition-comment-cpp\">//</span><span class=\"source-lf meta-embedded-block-cpp comment-line-double-slash-cpp\"> ... something here ...</span>\n<span class=\"source-lf meta-embedded-block-cpp\">    </span><span class=\"source-lf meta-embedded-block-cpp\">=}</span>\n<span class=\"source-lf\">}</span>\n<span class=\"source-lf storage-modifier-lflang\">reactor</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">B</span><span class=\"source-lf\"> {</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">input</span><span class=\"source-lf\"> x:</span><span class=\"source-lf storage-type-primitive-cpp storage-type-built-in-primitive-cpp\">int</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">output</span><span class=\"source-lf\"> y:</span><span class=\"source-lf storage-type-primitive-cpp storage-type-built-in-primitive-cpp\">int</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf keyword-control-lflang\">reaction</span><span class=\"source-lf\">(x) </span><span class=\"source-lf meta-embedded-block-cpp\">{=</span>\n<span class=\"source-lf meta-embedded-block-cpp comment-line-double-slash-cpp\">        </span><span class=\"source-lf meta-embedded-block-cpp comment-line-double-slash-cpp punctuation-definition-comment-cpp\">//</span><span class=\"source-lf meta-embedded-block-cpp comment-line-double-slash-cpp\"> ... something here ...</span>\n<span class=\"source-lf meta-embedded-block-cpp\">    </span><span class=\"source-lf meta-embedded-block-cpp\">=}</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf keyword-control-lflang\">reaction</span><span class=\"source-lf\">(</span><span class=\"source-lf support-variable-lflang\">startup</span><span class=\"source-lf\">) </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> y </span><span class=\"source-lf meta-embedded-block-cpp\">{=</span>\n<span class=\"source-lf meta-embedded-block-cpp comment-line-double-slash-cpp\">        </span><span class=\"source-lf meta-embedded-block-cpp comment-line-double-slash-cpp punctuation-definition-comment-cpp\">//</span><span class=\"source-lf meta-embedded-block-cpp comment-line-double-slash-cpp\"> ... something here ...</span>\n<span class=\"source-lf meta-embedded-block-cpp\">    </span><span class=\"source-lf meta-embedded-block-cpp\">=}</span>\n<span class=\"source-lf\">}</span>\n<span class=\"source-lf storage-modifier-lflang\">main</span><span class=\"source-lf\"> </span><span class=\"source-lf storage-modifier-lflang\">reactor</span><span class=\"source-lf\"> {</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">a</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">=</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-new-lflang\">new</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">A</span><span class=\"source-lf\">();</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">b</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">=</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-new-lflang\">new</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">B</span><span class=\"source-lf\">();</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">a</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">y</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">b</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">x</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-control-lflang\">after</span><span class=\"source-lf\"> </span><span class=\"source-lf constant-numeric-int-lflang\">0</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">b</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">y</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">a</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">x</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">}</span>\n</pre>\n<pre class=\"source-lf language-lf-py\"><span class=\"source-lf meta-targetspec-lflang keyword-control-lflang\">target</span><span class=\"source-lf meta-targetspec-lflang\"> </span><span class=\"source-lf meta-targetspec-lflang constant-language-lflang\">Python</span><span class=\"source-lf meta-targetspec-lflang\">;</span>\n<span class=\"source-lf storage-modifier-lflang\">reactor</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">A</span><span class=\"source-lf\"> {</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">input</span><span class=\"source-lf\"> x;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">output</span><span class=\"source-lf\"> y;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf keyword-control-lflang\">reaction</span><span class=\"source-lf\">(x) </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> y </span><span class=\"source-lf meta-embedded-block-py\">{=</span>\n<span class=\"source-lf meta-embedded-block-py\">        </span><span class=\"source-lf meta-embedded-block-py comment-line-number-sign-python punctuation-definition-comment-python\">#</span><span class=\"source-lf meta-embedded-block-py comment-line-number-sign-python\"> ... something here ...</span>\n<span class=\"source-lf meta-embedded-block-py\">    </span><span class=\"source-lf meta-embedded-block-py\">=}</span>\n<span class=\"source-lf\">}</span>\n<span class=\"source-lf storage-modifier-lflang\">reactor</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">B</span><span class=\"source-lf\"> {</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">input</span><span class=\"source-lf\"> x;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">output</span><span class=\"source-lf\"> y;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf keyword-control-lflang\">reaction</span><span class=\"source-lf\">(x) </span><span class=\"source-lf meta-embedded-block-py\">{=</span>\n<span class=\"source-lf meta-embedded-block-py\">        </span><span class=\"source-lf meta-embedded-block-py comment-line-number-sign-python punctuation-definition-comment-python\">#</span><span class=\"source-lf meta-embedded-block-py comment-line-number-sign-python\"> ... something here ...</span>\n<span class=\"source-lf meta-embedded-block-py\">    </span><span class=\"source-lf meta-embedded-block-py\">=}</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf keyword-control-lflang\">reaction</span><span class=\"source-lf\">(</span><span class=\"source-lf support-variable-lflang\">startup</span><span class=\"source-lf\">) </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> y </span><span class=\"source-lf meta-embedded-block-py\">{=</span>\n<span class=\"source-lf meta-embedded-block-py\">        </span><span class=\"source-lf meta-embedded-block-py comment-line-number-sign-python punctuation-definition-comment-python\">#</span><span class=\"source-lf meta-embedded-block-py comment-line-number-sign-python\"> ... something here ...</span>\n<span class=\"source-lf meta-embedded-block-py\">    </span><span class=\"source-lf meta-embedded-block-py\">=}</span>\n<span class=\"source-lf\">}</span>\n<span class=\"source-lf storage-modifier-lflang\">main</span><span class=\"source-lf\"> </span><span class=\"source-lf storage-modifier-lflang\">reactor</span><span class=\"source-lf\"> {</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">a</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">=</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-new-lflang\">new</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">A</span><span class=\"source-lf\">();</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">b</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">=</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-new-lflang\">new</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">B</span><span class=\"source-lf\">();</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">a</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">y</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">b</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">x</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-control-lflang\">after</span><span class=\"source-lf\"> </span><span class=\"source-lf constant-numeric-int-lflang\">0</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">b</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">y</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">a</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">x</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">}</span>\n</pre>\n<pre class=\"source-lf language-lf-ts\"><span class=\"source-lf meta-targetspec-lflang keyword-control-lflang\">target</span><span class=\"source-lf meta-targetspec-lflang\"> </span><span class=\"source-lf meta-targetspec-lflang constant-language-lflang\">TypeScript</span>\n<span class=\"source-lf storage-modifier-lflang\">reactor</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">A</span><span class=\"source-lf\"> {</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">input</span><span class=\"source-lf\"> x:</span><span class=\"source-lf storage-type-lflang\">number</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">output</span><span class=\"source-lf\"> y:</span><span class=\"source-lf storage-type-lflang\">number</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf keyword-control-lflang\">reaction</span><span class=\"source-lf\">(x) </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> y </span><span class=\"source-lf meta-embedded-block-ts\">{=</span>\n<span class=\"source-lf meta-embedded-block-ts punctuation-whitespace-comment-leading-ts\">        </span><span class=\"source-lf meta-embedded-block-ts comment-line-double-slash-ts punctuation-definition-comment-ts\">//</span><span class=\"source-lf meta-embedded-block-ts comment-line-double-slash-ts\"> ... something here ...</span>\n<span class=\"source-lf meta-embedded-block-ts\">    </span><span class=\"source-lf meta-embedded-block-ts\">=}</span>\n<span class=\"source-lf\">}</span>\n<span class=\"source-lf storage-modifier-lflang\">reactor</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">B</span><span class=\"source-lf\"> {</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">input</span><span class=\"source-lf\"> x:</span><span class=\"source-lf storage-type-lflang\">number</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">output</span><span class=\"source-lf\"> y:</span><span class=\"source-lf storage-type-lflang\">number</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf keyword-control-lflang\">reaction</span><span class=\"source-lf\">(x) </span><span class=\"source-lf meta-embedded-block-ts\">{=</span>\n<span class=\"source-lf meta-embedded-block-ts punctuation-whitespace-comment-leading-ts\">        </span><span class=\"source-lf meta-embedded-block-ts comment-line-double-slash-ts punctuation-definition-comment-ts\">//</span><span class=\"source-lf meta-embedded-block-ts comment-line-double-slash-ts\"> ... something here ...</span>\n<span class=\"source-lf meta-embedded-block-ts\">    </span><span class=\"source-lf meta-embedded-block-ts\">=}</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf keyword-control-lflang\">reaction</span><span class=\"source-lf\">(</span><span class=\"source-lf support-variable-lflang\">startup</span><span class=\"source-lf\">) </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> y </span><span class=\"source-lf meta-embedded-block-ts\">{=</span>\n<span class=\"source-lf meta-embedded-block-ts punctuation-whitespace-comment-leading-ts\">        </span><span class=\"source-lf meta-embedded-block-ts comment-line-double-slash-ts punctuation-definition-comment-ts\">//</span><span class=\"source-lf meta-embedded-block-ts comment-line-double-slash-ts\"> ... something here ...</span>\n<span class=\"source-lf meta-embedded-block-ts\">    </span><span class=\"source-lf meta-embedded-block-ts\">=}</span>\n<span class=\"source-lf\">}</span>\n<span class=\"source-lf storage-modifier-lflang\">main</span><span class=\"source-lf\"> </span><span class=\"source-lf storage-modifier-lflang\">reactor</span><span class=\"source-lf\"> {</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">a</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">=</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-new-lflang\">new</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">A</span><span class=\"source-lf\">()</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">b</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">=</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-new-lflang\">new</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">B</span><span class=\"source-lf\">()</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">a</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">y</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">b</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">x</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-control-lflang\">after</span><span class=\"source-lf\"> </span><span class=\"source-lf constant-numeric-int-lflang\">0</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">b</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">y</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">a</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">x</span>\n<span class=\"source-lf\">}</span>\n</pre>\n<pre class=\"source-lf language-lf-rs\"><span class=\"source-lf meta-targetspec-lflang keyword-control-lflang\">target</span><span class=\"source-lf meta-targetspec-lflang\"> </span><span class=\"source-lf meta-targetspec-lflang constant-language-lflang\">Rust</span><span class=\"source-lf meta-targetspec-lflang\">;</span>\n<span class=\"source-lf storage-modifier-lflang\">reactor</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">A</span><span class=\"source-lf\"> {</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">input</span><span class=\"source-lf\"> x:</span><span class=\"source-lf entity-name-type-lflang\">u32</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">output</span><span class=\"source-lf\"> y:</span><span class=\"source-lf entity-name-type-lflang\">u32</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf keyword-control-lflang\">reaction</span><span class=\"source-lf\">(x) </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> y </span><span class=\"source-lf meta-embedded-block-rs\">{=</span>\n<span class=\"source-lf meta-embedded-block-rs\">        </span><span class=\"source-lf meta-embedded-block-rs comment-line-double-slash-rust\">//</span><span class=\"source-lf meta-embedded-block-rs comment-line-double-slash-rust\"> ... something here ...</span>\n<span class=\"source-lf meta-embedded-block-rs\">    </span><span class=\"source-lf meta-embedded-block-rs\">=}</span>\n<span class=\"source-lf\">}</span>\n<span class=\"source-lf storage-modifier-lflang\">reactor</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">B</span><span class=\"source-lf\"> {</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">input</span><span class=\"source-lf\"> x:</span><span class=\"source-lf entity-name-type-lflang\">u32</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">output</span><span class=\"source-lf\"> y:</span><span class=\"source-lf entity-name-type-lflang\">u32</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf keyword-control-lflang\">reaction</span><span class=\"source-lf\">(x) </span><span class=\"source-lf meta-embedded-block-rs\">{=</span>\n<span class=\"source-lf meta-embedded-block-rs\">        </span><span class=\"source-lf meta-embedded-block-rs comment-line-double-slash-rust\">//</span><span class=\"source-lf meta-embedded-block-rs comment-line-double-slash-rust\"> ... something here ...</span>\n<span class=\"source-lf meta-embedded-block-rs\">    </span><span class=\"source-lf meta-embedded-block-rs\">=}</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf keyword-control-lflang\">reaction</span><span class=\"source-lf\">(</span><span class=\"source-lf support-variable-lflang\">startup</span><span class=\"source-lf\">) </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> y </span><span class=\"source-lf meta-embedded-block-rs\">{=</span>\n<span class=\"source-lf meta-embedded-block-rs\">        </span><span class=\"source-lf meta-embedded-block-rs comment-line-double-slash-rust\">//</span><span class=\"source-lf meta-embedded-block-rs comment-line-double-slash-rust\"> ... something here ...</span>\n<span class=\"source-lf meta-embedded-block-rs\">    </span><span class=\"source-lf meta-embedded-block-rs\">=}</span>\n<span class=\"source-lf\">}</span>\n<span class=\"source-lf storage-modifier-lflang\">main</span><span class=\"source-lf\"> </span><span class=\"source-lf storage-modifier-lflang\">reactor</span><span class=\"source-lf\"> {</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">a</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">=</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-new-lflang\">new</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">A</span><span class=\"source-lf\">();</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">b</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">=</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-new-lflang\">new</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">B</span><span class=\"source-lf\">();</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">a</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">y</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">b</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">x</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-control-lflang\">after</span><span class=\"source-lf\"> </span><span class=\"source-lf constant-numeric-int-lflang\">0</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">b</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">y</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">a</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">x</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">}</span>\n</pre>\n<p>$end(CycleWithDelay)$</p>\n<img alt=\"Lingua Franca diagram\" src=\"/417e4360a12ebc9444c7114042cfdd44/CycleWithDelay.svg\" width=\"400\">\n<p>Here, we have used a delay of 0, which results in a delay of one <a href=\"/docs/handbook/superdense-time\">microstep</a>. We could equally well have specified a positive time value.</p>\n<h2 id=\"reaction-order\" style=\"position:relative;\"><a href=\"#reaction-order\" aria-label=\"reaction order permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reaction Order</h2>\n<p>Frequently, a program will have such cycles, but you donâ€™t want a logical delay in the loop. To get a cycle without logical delays, the reactions need to be reordered, as shown below:</p>\n<p>$start(CycleReordered)$</p>\n<pre class=\"source-lf language-lf-c\"><span class=\"source-lf meta-targetspec-lflang keyword-control-lflang\">target</span><span class=\"source-lf meta-targetspec-lflang\"> </span><span class=\"source-lf meta-targetspec-lflang constant-language-lflang\">C</span><span class=\"source-lf meta-targetspec-lflang\">;</span>\n<span class=\"source-lf storage-modifier-lflang\">reactor</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">A</span><span class=\"source-lf\"> {</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">input</span><span class=\"source-lf\"> x:</span><span class=\"source-lf storage-type-primitive-cpp storage-type-built-in-primitive-cpp\">int</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">output</span><span class=\"source-lf\"> y:</span><span class=\"source-lf storage-type-primitive-cpp storage-type-built-in-primitive-cpp\">int</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf keyword-control-lflang\">reaction</span><span class=\"source-lf\">(x) </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> y </span><span class=\"source-lf meta-embedded-block-c\">{=</span>\n<span class=\"source-lf meta-embedded-block-c comment-line-double-slash-cpp\">        </span><span class=\"source-lf meta-embedded-block-c comment-line-double-slash-cpp punctuation-definition-comment-cpp\">//</span><span class=\"source-lf meta-embedded-block-c comment-line-double-slash-cpp\"> ... something here ...</span>\n<span class=\"source-lf meta-embedded-block-c\">    </span><span class=\"source-lf meta-embedded-block-c\">=}</span>\n<span class=\"source-lf\">}</span>\n<span class=\"source-lf storage-modifier-lflang\">reactor</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">B</span><span class=\"source-lf\"> {</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">input</span><span class=\"source-lf\"> x:</span><span class=\"source-lf storage-type-primitive-cpp storage-type-built-in-primitive-cpp\">int</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">output</span><span class=\"source-lf\"> y:</span><span class=\"source-lf storage-type-primitive-cpp storage-type-built-in-primitive-cpp\">int</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf keyword-control-lflang\">reaction</span><span class=\"source-lf\">(</span><span class=\"source-lf support-variable-lflang\">startup</span><span class=\"source-lf\">) </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> y </span><span class=\"source-lf meta-embedded-block-c\">{=</span>\n<span class=\"source-lf meta-embedded-block-c comment-line-double-slash-cpp\">        </span><span class=\"source-lf meta-embedded-block-c comment-line-double-slash-cpp punctuation-definition-comment-cpp\">//</span><span class=\"source-lf meta-embedded-block-c comment-line-double-slash-cpp\"> ... something here ...</span>\n<span class=\"source-lf meta-embedded-block-c\">    </span><span class=\"source-lf meta-embedded-block-c\">=}</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf keyword-control-lflang\">reaction</span><span class=\"source-lf\">(x) </span><span class=\"source-lf meta-embedded-block-c\">{=</span>\n<span class=\"source-lf meta-embedded-block-c comment-line-double-slash-cpp\">        </span><span class=\"source-lf meta-embedded-block-c comment-line-double-slash-cpp punctuation-definition-comment-cpp\">//</span><span class=\"source-lf meta-embedded-block-c comment-line-double-slash-cpp\"> ... something here ...</span>\n<span class=\"source-lf meta-embedded-block-c\">    </span><span class=\"source-lf meta-embedded-block-c\">=}</span>\n<span class=\"source-lf\">}</span>\n<span class=\"source-lf storage-modifier-lflang\">main</span><span class=\"source-lf\"> </span><span class=\"source-lf storage-modifier-lflang\">reactor</span><span class=\"source-lf\"> {</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">a</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">=</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-new-lflang\">new</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">A</span><span class=\"source-lf\">();</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">b</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">=</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-new-lflang\">new</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">B</span><span class=\"source-lf\">();</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">a</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">y</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">b</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">x</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">b</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">y</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">a</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">x</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">}</span>\n</pre>\n<pre class=\"source-lf language-lf-cpp\"><span class=\"source-lf meta-targetspec-lflang keyword-control-lflang\">target</span><span class=\"source-lf meta-targetspec-lflang\"> </span><span class=\"source-lf meta-targetspec-lflang constant-language-lflang\">Cpp</span><span class=\"source-lf meta-targetspec-lflang\">;</span>\n<span class=\"source-lf storage-modifier-lflang\">reactor</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">A</span><span class=\"source-lf\"> {</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">input</span><span class=\"source-lf\"> x:</span><span class=\"source-lf storage-type-primitive-cpp storage-type-built-in-primitive-cpp\">int</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">output</span><span class=\"source-lf\"> y:</span><span class=\"source-lf storage-type-primitive-cpp storage-type-built-in-primitive-cpp\">int</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf keyword-control-lflang\">reaction</span><span class=\"source-lf\">(x) </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> y </span><span class=\"source-lf meta-embedded-block-cpp\">{=</span>\n<span class=\"source-lf meta-embedded-block-cpp comment-line-double-slash-cpp\">        </span><span class=\"source-lf meta-embedded-block-cpp comment-line-double-slash-cpp punctuation-definition-comment-cpp\">//</span><span class=\"source-lf meta-embedded-block-cpp comment-line-double-slash-cpp\"> ... something here ...</span>\n<span class=\"source-lf meta-embedded-block-cpp\">    </span><span class=\"source-lf meta-embedded-block-cpp\">=}</span>\n<span class=\"source-lf\">}</span>\n<span class=\"source-lf storage-modifier-lflang\">reactor</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">B</span><span class=\"source-lf\"> {</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">input</span><span class=\"source-lf\"> x:</span><span class=\"source-lf storage-type-primitive-cpp storage-type-built-in-primitive-cpp\">int</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">output</span><span class=\"source-lf\"> y:</span><span class=\"source-lf storage-type-primitive-cpp storage-type-built-in-primitive-cpp\">int</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf keyword-control-lflang\">reaction</span><span class=\"source-lf\">(</span><span class=\"source-lf support-variable-lflang\">startup</span><span class=\"source-lf\">) </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> y </span><span class=\"source-lf meta-embedded-block-cpp\">{=</span>\n<span class=\"source-lf meta-embedded-block-cpp comment-line-double-slash-cpp\">        </span><span class=\"source-lf meta-embedded-block-cpp comment-line-double-slash-cpp punctuation-definition-comment-cpp\">//</span><span class=\"source-lf meta-embedded-block-cpp comment-line-double-slash-cpp\"> ... something here ...</span>\n<span class=\"source-lf meta-embedded-block-cpp\">    </span><span class=\"source-lf meta-embedded-block-cpp\">=}</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf keyword-control-lflang\">reaction</span><span class=\"source-lf\">(x) </span><span class=\"source-lf meta-embedded-block-cpp\">{=</span>\n<span class=\"source-lf meta-embedded-block-cpp comment-line-double-slash-cpp\">        </span><span class=\"source-lf meta-embedded-block-cpp comment-line-double-slash-cpp punctuation-definition-comment-cpp\">//</span><span class=\"source-lf meta-embedded-block-cpp comment-line-double-slash-cpp\"> ... something here ...</span>\n<span class=\"source-lf meta-embedded-block-cpp\">    </span><span class=\"source-lf meta-embedded-block-cpp\">=}</span>\n<span class=\"source-lf\">}</span>\n<span class=\"source-lf storage-modifier-lflang\">main</span><span class=\"source-lf\"> </span><span class=\"source-lf storage-modifier-lflang\">reactor</span><span class=\"source-lf\"> {</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">a</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">=</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-new-lflang\">new</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">A</span><span class=\"source-lf\">();</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">b</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">=</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-new-lflang\">new</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">B</span><span class=\"source-lf\">();</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">a</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">y</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">b</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">x</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">b</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">y</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">a</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">x</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">}</span>\n</pre>\n<pre class=\"source-lf language-lf-py\"><span class=\"source-lf meta-targetspec-lflang keyword-control-lflang\">target</span><span class=\"source-lf meta-targetspec-lflang\"> </span><span class=\"source-lf meta-targetspec-lflang constant-language-lflang\">Python</span><span class=\"source-lf meta-targetspec-lflang\">;</span>\n<span class=\"source-lf storage-modifier-lflang\">reactor</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">A</span><span class=\"source-lf\"> {</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">input</span><span class=\"source-lf\"> x;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">output</span><span class=\"source-lf\"> y;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf keyword-control-lflang\">reaction</span><span class=\"source-lf\">(x) </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> y </span><span class=\"source-lf meta-embedded-block-py\">{=</span>\n<span class=\"source-lf meta-embedded-block-py\">        </span><span class=\"source-lf meta-embedded-block-py comment-line-number-sign-python punctuation-definition-comment-python\">#</span><span class=\"source-lf meta-embedded-block-py comment-line-number-sign-python\"> ... something here ...</span>\n<span class=\"source-lf meta-embedded-block-py\">    </span><span class=\"source-lf meta-embedded-block-py\">=}</span>\n<span class=\"source-lf\">}</span>\n<span class=\"source-lf storage-modifier-lflang\">reactor</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">B</span><span class=\"source-lf\"> {</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">input</span><span class=\"source-lf\"> x;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">output</span><span class=\"source-lf\"> y;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf keyword-control-lflang\">reaction</span><span class=\"source-lf\">(</span><span class=\"source-lf support-variable-lflang\">startup</span><span class=\"source-lf\">) </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> y </span><span class=\"source-lf meta-embedded-block-py\">{=</span>\n<span class=\"source-lf meta-embedded-block-py\">        </span><span class=\"source-lf meta-embedded-block-py comment-line-number-sign-python punctuation-definition-comment-python\">#</span><span class=\"source-lf meta-embedded-block-py comment-line-number-sign-python\"> ... something here ...</span>\n<span class=\"source-lf meta-embedded-block-py\">    </span><span class=\"source-lf meta-embedded-block-py\">=}</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf keyword-control-lflang\">reaction</span><span class=\"source-lf\">(x) </span><span class=\"source-lf meta-embedded-block-py\">{=</span>\n<span class=\"source-lf meta-embedded-block-py\">        </span><span class=\"source-lf meta-embedded-block-py comment-line-number-sign-python punctuation-definition-comment-python\">#</span><span class=\"source-lf meta-embedded-block-py comment-line-number-sign-python\"> ... something here ...</span>\n<span class=\"source-lf meta-embedded-block-py\">    </span><span class=\"source-lf meta-embedded-block-py\">=}</span>\n<span class=\"source-lf\">}</span>\n<span class=\"source-lf storage-modifier-lflang\">main</span><span class=\"source-lf\"> </span><span class=\"source-lf storage-modifier-lflang\">reactor</span><span class=\"source-lf\"> {</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">a</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">=</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-new-lflang\">new</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">A</span><span class=\"source-lf\">();</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">b</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">=</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-new-lflang\">new</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">B</span><span class=\"source-lf\">();</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">a</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">y</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">b</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">x</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">b</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">y</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">a</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">x</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">}</span>\n</pre>\n<pre class=\"source-lf language-lf-ts\"><span class=\"source-lf meta-targetspec-lflang keyword-control-lflang\">target</span><span class=\"source-lf meta-targetspec-lflang\"> </span><span class=\"source-lf meta-targetspec-lflang constant-language-lflang\">TypeScript</span>\n<span class=\"source-lf storage-modifier-lflang\">reactor</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">A</span><span class=\"source-lf\"> {</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">input</span><span class=\"source-lf\"> x:</span><span class=\"source-lf storage-type-lflang\">number</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">output</span><span class=\"source-lf\"> y:</span><span class=\"source-lf storage-type-lflang\">number</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf keyword-control-lflang\">reaction</span><span class=\"source-lf\">(x) </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> y </span><span class=\"source-lf meta-embedded-block-ts\">{=</span>\n<span class=\"source-lf meta-embedded-block-ts punctuation-whitespace-comment-leading-ts\">        </span><span class=\"source-lf meta-embedded-block-ts comment-line-double-slash-ts punctuation-definition-comment-ts\">//</span><span class=\"source-lf meta-embedded-block-ts comment-line-double-slash-ts\"> ... something here ...</span>\n<span class=\"source-lf meta-embedded-block-ts\">    </span><span class=\"source-lf meta-embedded-block-ts\">=}</span>\n<span class=\"source-lf\">}</span>\n<span class=\"source-lf storage-modifier-lflang\">reactor</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">B</span><span class=\"source-lf\"> {</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">input</span><span class=\"source-lf\"> x:</span><span class=\"source-lf storage-type-lflang\">number</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">output</span><span class=\"source-lf\"> y:</span><span class=\"source-lf storage-type-lflang\">number</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf keyword-control-lflang\">reaction</span><span class=\"source-lf\">(</span><span class=\"source-lf support-variable-lflang\">startup</span><span class=\"source-lf\">) </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> y </span><span class=\"source-lf meta-embedded-block-ts\">{=</span>\n<span class=\"source-lf meta-embedded-block-ts punctuation-whitespace-comment-leading-ts\">        </span><span class=\"source-lf meta-embedded-block-ts comment-line-double-slash-ts punctuation-definition-comment-ts\">//</span><span class=\"source-lf meta-embedded-block-ts comment-line-double-slash-ts\"> ... something here ...</span>\n<span class=\"source-lf meta-embedded-block-ts\">    </span><span class=\"source-lf meta-embedded-block-ts\">=}</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf keyword-control-lflang\">reaction</span><span class=\"source-lf\">(x) </span><span class=\"source-lf meta-embedded-block-ts\">{=</span>\n<span class=\"source-lf meta-embedded-block-ts punctuation-whitespace-comment-leading-ts\">        </span><span class=\"source-lf meta-embedded-block-ts comment-line-double-slash-ts punctuation-definition-comment-ts\">//</span><span class=\"source-lf meta-embedded-block-ts comment-line-double-slash-ts\"> ... something here ...</span>\n<span class=\"source-lf meta-embedded-block-ts\">    </span><span class=\"source-lf meta-embedded-block-ts\">=}</span>\n<span class=\"source-lf\">}</span>\n<span class=\"source-lf storage-modifier-lflang\">main</span><span class=\"source-lf\"> </span><span class=\"source-lf storage-modifier-lflang\">reactor</span><span class=\"source-lf\"> {</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">a</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">=</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-new-lflang\">new</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">A</span><span class=\"source-lf\">()</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">b</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">=</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-new-lflang\">new</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">B</span><span class=\"source-lf\">()</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">a</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">y</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">b</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">x</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">b</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">y</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">a</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">x</span>\n<span class=\"source-lf\">}</span>\n</pre>\n<pre class=\"source-lf language-lf-rs\"><span class=\"source-lf meta-targetspec-lflang keyword-control-lflang\">target</span><span class=\"source-lf meta-targetspec-lflang\"> </span><span class=\"source-lf meta-targetspec-lflang constant-language-lflang\">Rust</span><span class=\"source-lf meta-targetspec-lflang\">;</span>\n<span class=\"source-lf storage-modifier-lflang\">reactor</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">A</span><span class=\"source-lf\"> {</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">input</span><span class=\"source-lf\"> x:</span><span class=\"source-lf entity-name-type-lflang\">u32</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">output</span><span class=\"source-lf\"> y:</span><span class=\"source-lf entity-name-type-lflang\">u32</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf keyword-control-lflang\">reaction</span><span class=\"source-lf\">(x) </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> y </span><span class=\"source-lf meta-embedded-block-rs\">{=</span>\n<span class=\"source-lf meta-embedded-block-rs\">        </span><span class=\"source-lf meta-embedded-block-rs comment-line-double-slash-rust\">//</span><span class=\"source-lf meta-embedded-block-rs comment-line-double-slash-rust\"> ... something here ...</span>\n<span class=\"source-lf meta-embedded-block-rs\">    </span><span class=\"source-lf meta-embedded-block-rs\">=}</span>\n<span class=\"source-lf\">}</span>\n<span class=\"source-lf storage-modifier-lflang\">reactor</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">B</span><span class=\"source-lf\"> {</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">input</span><span class=\"source-lf\"> x:</span><span class=\"source-lf entity-name-type-lflang\">u32</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf storage-modifier-lflang\">output</span><span class=\"source-lf\"> y:</span><span class=\"source-lf entity-name-type-lflang\">u32</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf keyword-control-lflang\">reaction</span><span class=\"source-lf\">(</span><span class=\"source-lf support-variable-lflang\">startup</span><span class=\"source-lf\">) </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> y </span><span class=\"source-lf meta-embedded-block-rs\">{=</span>\n<span class=\"source-lf meta-embedded-block-rs\">        </span><span class=\"source-lf meta-embedded-block-rs comment-line-double-slash-rust\">//</span><span class=\"source-lf meta-embedded-block-rs comment-line-double-slash-rust\"> ... something here ...</span>\n<span class=\"source-lf meta-embedded-block-rs\">    </span><span class=\"source-lf meta-embedded-block-rs\">=}</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf keyword-control-lflang\">reaction</span><span class=\"source-lf\">(x) </span><span class=\"source-lf meta-embedded-block-rs\">{=</span>\n<span class=\"source-lf meta-embedded-block-rs\">        </span><span class=\"source-lf meta-embedded-block-rs comment-line-double-slash-rust\">//</span><span class=\"source-lf meta-embedded-block-rs comment-line-double-slash-rust\"> ... something here ...</span>\n<span class=\"source-lf meta-embedded-block-rs\">    </span><span class=\"source-lf meta-embedded-block-rs\">=}</span>\n<span class=\"source-lf\">}</span>\n<span class=\"source-lf storage-modifier-lflang\">main</span><span class=\"source-lf\"> </span><span class=\"source-lf storage-modifier-lflang\">reactor</span><span class=\"source-lf\"> {</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">a</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">=</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-new-lflang\">new</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">A</span><span class=\"source-lf\">();</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">b</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">=</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-new-lflang\">new</span><span class=\"source-lf\"> </span><span class=\"source-lf entity-name-type-lflang\">B</span><span class=\"source-lf\">();</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">a</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">y</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">b</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">x</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">    </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">b</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">y</span><span class=\"source-lf\"> </span><span class=\"source-lf keyword-operator-lflang\">-&gt;</span><span class=\"source-lf\"> </span><span class=\"source-lf variable-other-constant-reactorinstance-lflang\">a</span><span class=\"source-lf keyword-operator-lflang\">.</span><span class=\"source-lf variable-other-lflang\">x</span><span class=\"source-lf\">;</span>\n<span class=\"source-lf\">}</span>\n</pre>\n<p>$end(CycleReordered)$</p>\n<img alt=\"Lingua Franca diagram\" src=\"/d6d028e6b96b958e2a53a689a64e77f2/CycleReordered.svg\" width=\"400\">\n<p>There is no longer any causality loop.</p>","headings":[{"value":"Cycles","depth":2},{"value":"Cycles with Delays","depth":2},{"value":"Reaction Order","depth":2}],"frontmatter":{"permalink":"/docs/handbook/causality-loops","title":"Causality Loops","oneline":"Causality loops in Lingua Franca.","preamble":""}},"prev":{"childMarkdownRemark":{"frontmatter":{"title":"Reactions and Methods","oneline":"Reactions and methods in Lingua Franca.","permalink":"/docs/handbook/reactions-and-methods"}}},"next":{"childMarkdownRemark":{"frontmatter":{"title":"Extending Reactors","oneline":"Extending reactors in Lingua Franca.","permalink":"/docs/handbook/extending-reactors"}}}},"pageContext":{"id":"1-causality-loops","slug":"/docs/handbook/causality-loops","repoPath":"/packages/documentation/copy/en/topics/Causality Loops.md","previousID":"0f85acda-bc3d-50bd-b8c0-1ed6e08f7895","nextID":"d4ade317-2d91-582b-8cca-37743461f687","lang":"en","modifiedTime":"2023-08-29T20:53:09.275Z"}},"staticQueryHashes":[]}